var fs = require("fs");
exports.init = function (conf){
	var consoleError = console.error;
	if(conf && conf.path) {
		var arr = ["log","error","info"];
		var lever = conf.lever || "info";
		var separate = conf.separate || "yyyy-MM-dd";
		var expire_day = Number(conf.expire_day);
		expire_day = expire_day || 7;
		var expire_time = expire_day * 86400000;
		if(lever === "log") {
			arr = ["log","error"];
		} else if(lever === "error") {
			arr = ["error"];
		}
		var prvPixStr = undefined;
		arr.forEach(function(key) {
			var consoleKey = console[key];
			console[key] = function(str) {
				var date = new Date();
				if(key === "error") {
					consoleKey.apply(console,["["+date.format("yyyy-MM-dd HH:mm:ss.S")+"]:"]);
				}
				consoleKey.apply(console,arguments);
				if(str === "%s: %dms") return;
				var pixStr = "["+date.format("yyyy-MM-dd HH:mm:ss")+" "+key+"]:\r\n\t";
				if(prvPixStr === pixStr) {
					pixStr = "\t";
				} else {
					prvPixStr = pixStr;
				}
				var lgFlNm = date.format(separate)+".log";
				var lgPh = conf.path+"/"+lgFlNm;
				if(expire_day === -1) {
					fs.appendFile(lgPh,pixStr+str+"\r\n",function(err){
						if(err) {
							consoleError.call(console,err);
							return;
						}
					});
					return;
				}
				fs.exists(lgPh,function(exists) {
					if(!exists) {
						fs.readdir(conf.path,function(err,files){
							if(err) {
								consoleError.call(console,err);
								return;
							}
							var tmpFn = function(i) {
								if(files.length <= i) {
									fs.appendFile(lgPh,pixStr+str+"\r\n",function(err){
										if(err) {
											consoleError.call(console,err);
											return;
										}
									});
									return;
								}
								var file = files[i];
								var dateTmp = Date.parseString(file,separate+".log");
								if(!dateTmp) {
									tmpFn(i+1);
									return;
								}
								fs.stat(conf.path+"/"+file,function(err,stats){
									if(err) {
										consoleError.call(console,err);
										tmpFn(i+1);
										return;
									}
									if(!stats.isFile()) {
										tmpFn(i+1);
										return;
									}
									if(date.getTime() - dateTmp.getTime() < expire_time) {
										tmpFn(i+1);
										return;
									}
									fs.unlink(conf.path+"/"+file,function(err){
										if(err) {
//											consoleError.call(console,err);
											tmpFn(i+1);
											return;
										}
										tmpFn(i+1);
									});
								});
							};
							tmpFn(0);
						});
						return;
					}
					fs.appendFile(lgPh,pixStr+str+"\r\n",function(err){
						if(err) {
							consoleError.call(console,err);
							return;
						}
					});
				});
			};
		});
	}
};